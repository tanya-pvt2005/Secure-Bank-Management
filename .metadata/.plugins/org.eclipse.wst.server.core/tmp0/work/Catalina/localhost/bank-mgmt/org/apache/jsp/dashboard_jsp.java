/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.11
 * Generated at: 2025-09-14 04:16:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

// Check if user is logged in
if (session.getAttribute("loggedIn") == null) {
    response.sendRedirect("index.jsp");
    return;
}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>GreenBank - Dashboard</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            font-family: 'Poppins', sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');\r\n");
      out.write("        \r\n");
      out.write("        :root {\r\n");
      out.write("            --primary-dark: #1b5e20;\r\n");
      out.write("            --primary: #2e7d32;\r\n");
      out.write("            --primary-light: #4caf50;\r\n");
      out.write("            --primary-lighter: #81c784;\r\n");
      out.write("            --primary-lightest: #e8f5e9;\r\n");
      out.write("            --white: #ffffff;\r\n");
      out.write("            --gray-light: #f5f5f5;\r\n");
      out.write("            --text-dark: #333333;\r\n");
      out.write("            --text-light: #666666;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        body {\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary-lightest) 0%, var(--white) 100%);\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .header {\r\n");
      out.write("            background: linear-gradient(90deg, var(--primary-dark) 0%, var(--primary) 100%);\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("            padding: 1rem 2rem;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .header h1 {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .header-actions {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 1rem;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn {\r\n");
      out.write("            background: var(--primary);\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("            padding: 0.7rem 1.5rem;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            display: inline-flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 8px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn:hover {\r\n");
      out.write("            background: var(--primary-dark);\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-logout {\r\n");
      out.write("            background: #d32f2f;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-logout:hover {\r\n");
      out.write("            background: #b71c1c;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-secondary {\r\n");
      out.write("            background: var(--primary-lightest);\r\n");
      out.write("            color: var(--primary-dark);\r\n");
      out.write("            border: 1px solid var(--primary-light);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-secondary:hover {\r\n");
      out.write("            background: var(--primary-lighter);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .dashboard-container {\r\n");
      out.write("            padding: 2rem;\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .dashboard-actions {\r\n");
      out.write("            margin-bottom: 2rem;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .section-title {\r\n");
      out.write("            color: var(--primary-dark);\r\n");
      out.write("            margin-bottom: 1.5rem;\r\n");
      out.write("            padding-bottom: 0.5rem;\r\n");
      out.write("            border-bottom: 2px solid var(--primary-light);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .users-table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            background: var(--white);\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .users-table th {\r\n");
      out.write("            background-color: var(--primary-lightest);\r\n");
      out.write("            padding: 1rem;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: var(--primary-dark);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .users-table td {\r\n");
      out.write("            padding: 1rem;\r\n");
      out.write("            border-bottom: 1px solid var(--gray-light);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .users-table tr:last-child td {\r\n");
      out.write("            border-bottom: none;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .users-table tr:hover {\r\n");
      out.write("            background-color: var(--primary-lightest);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 0.5rem;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-btn {\r\n");
      out.write("            padding: 0.4rem 0.8rem;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            display: inline-flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 4px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-view {\r\n");
      out.write("            background: var(--primary-light);\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-edit {\r\n");
      out.write("            background: #ff9800;\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-delete {\r\n");
      out.write("            background: #f44336;\r\n");
      out.write("            color: var(--white);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .empty-state {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 3rem;\r\n");
      out.write("            color: var(--text-light);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .empty-state i {\r\n");
      out.write("            font-size: 3rem;\r\n");
      out.write("            margin-bottom: 1rem;\r\n");
      out.write("            color: var(--primary-light);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .header {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("                gap: 1rem;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .dashboard-actions {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("                gap: 1rem;\r\n");
      out.write("                align-items: flex-start;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .users-table {\r\n");
      out.write("                display: block;\r\n");
      out.write("                overflow-x: auto;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .action-buttons {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <h1><i class=\"fas fa-tachometer-alt\"></i> Admin Dashboard</h1>\r\n");
      out.write("        <div class=\"header-actions\">\r\n");
      out.write("            <span>Welcome, Admin</span>\r\n");
      out.write("            <a href=\"index.jsp?logout=true\" class=\"btn btn-logout\">\r\n");
      out.write("                <i class=\"fas fa-sign-out-alt\"></i> Logout\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"dashboard-container\">\r\n");
      out.write("        <div class=\"dashboard-actions\">\r\n");
      out.write("            <h2 class=\"section-title\">User Management</h2>\r\n");
      out.write("            <a href=\"add-user.jsp\" class=\"btn\">\r\n");
      out.write("                <i class=\"fas fa-user-plus\"></i> Add New User\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <table class=\"users-table\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>User ID</th>\r\n");
      out.write("                    <th>Name</th>\r\n");
      out.write("                    <th>Email</th>\r\n");
      out.write("                    <th>Total Balance</th>\r\n");
      out.write("                    <th>Actions</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                <!-- Users will be dynamically populated from database -->\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td colspan=\"5\" class=\"empty-state\">\r\n");
      out.write("                        <i class=\"fas fa-users\"></i>\r\n");
      out.write("                        <h3>No Users Found</h3>\r\n");
      out.write("                        <p>Users will appear here once you add them to the database</p>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Simple confirmation for logout\r\n");
      out.write("        document.querySelector('.btn-logout').addEventListener('click', function(e) {\r\n");
      out.write("            if (!confirm('Are you sure you want to logout?')) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
